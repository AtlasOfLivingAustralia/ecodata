buildscript {
    repositories {
        mavenLocal()
        maven { url "https://nexus.ala.org.au/content/groups/public/" }
        maven { url "https://repo.grails.org/grails/core" }
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:$assetPipelineVersion"
        classpath 'com.bmuschko:gradle-clover-plugin:3.0.1'
        classpath 'org.grails.plugins:quartz:2.0.13' // Needed to compile *Job classes
        classpath "org.grails.plugins:views-gradle:$grailsViewsVersion"

    }
}

plugins {
    //id "com.gorylenko.gradle-git-properties" version "2.2.4"
    //id 'com.craigburke.client-dependencies' version '1.4.0'
    id "com.github.node-gradle.node" version "3.4.0"
    id 'jacoco'
}

version "4.2-SNAPSHOT"
group "au.org.ala"
description "Ecodata"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin: "groovy"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin: "org.grails.plugins.views-json"
apply plugin:"asset-pipeline"

// Open Clover doesn't support groovy 3 - https://github.com/openclover/clover/issues/121
if (Boolean.valueOf(enableClover)) {
    apply from: "${project.projectDir}/gradle/clover.gradle"
}

if (Boolean.valueOf(enableJacoco)) {
    apply from: "${project.projectDir}/gradle/jacoco.gradle"
}

sourceCompatibility = '11'
targetCompatibility = '11'

apply from: "${project.projectDir}/gradle/publish.gradle"

repositories {
    mavenLocal()
    maven { url "https://repo.osgeo.org/repository/release/" }
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "https://nexus.ala.org.au/content/groups/public/" }
    mavenCentral()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.grails:grails-core"
    implementation 'javax.media:jai-core:1.1.3'
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-interceptors"
    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:scaffolding"
    implementation "org.grails.plugins:events"
    implementation "org.grails:grails-plugin-datasource"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-codecs"
    implementation "org.grails.plugins:mongodb:$gormMongoVersion"
    implementation "org.grails.plugins:gorm-graphql-plugin:2.0.0"
    // Without this override, 18.1 is being included which is not compatible with the graphql-plugin
    implementation "com.graphql-java:graphql-java:14.0"
    implementation "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    implementation "org.grails.plugins:views-json:$grailsViewsVersion"
    implementation "org.grails.plugins:views-json-templates:$grailsViewsVersion"

    implementation 'dk.glasius:external-config:3.0.0'
    implementation "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"

    implementation "org.elasticsearch:elasticsearch:$elasticsearchVersion"
    implementation "org.elasticsearch.client:elasticsearch-rest-high-level-client:$elasticsearchVersion"
    implementation "org.elasticsearch.client:elasticsearch-rest-client:$elasticsearchVersion"

    implementation "com.spatial4j:spatial4j:0.5"

    implementation group: 'org.locationtech.spatial4j', name: 'spatial4j', version: '0.7'
    implementation group: 'org.locationtech.jts', name: 'jts-core', version: '1.15.0'

    implementation 'org.apache.poi:poi:5.2.2'
    implementation 'org.apache.poi:poi-ooxml:5.2.2'
    implementation 'org.codehaus.groovy:groovy-dateutil:3.0.8'

    implementation "org.grails.plugins:ala-auth:5.2.0-SNAPSHOT"
    implementation "org.grails.plugins:ala-ws-security-plugin:4.1.1"
    implementation "org.grails.plugins:ala-admin-plugin:2.1"
    implementation "au.org.ala:userdetails-service-client:1.5.0"
    implementation "org.codehaus.gpars:gpars:1.1.0"
    implementation "org.apache.httpcomponents:httpclient:4.5.7"
    implementation "org.imgscalr:imgscalr-lib:4.2"
    implementation "commons-io:commons-io:2.11.0"
    implementation ("com.github.fge:json-schema-validator:2.1.6")  {
        exclude module: "mailapi"
    }

    implementation 'org.grails.plugins:excel-export:2.1'
    implementation "org.locationtech.jts:jts-core:${jtsVersion}"
    implementation "com.itextpdf:itextpdf:5.5.1"
    implementation "org.apache.httpcomponents:httpmime:4.2.1"
    implementation 'org.grails.plugins:csv:1.0.1'
    implementation "org.geotools.xsd:gt-xsd-kml:${geoToolsVersion}"
    implementation "org.geotools:gt-shapefile:${geoToolsVersion}"
    implementation "org.geotools:gt-geojson:${geoToolsVersion}"
    implementation "org.geotools:gt-epsg-hsql:${geoToolsVersion}"
    implementation 'com.twelvemonkeys.imageio:imageio-jpeg:3.6.4'
    implementation 'org.grails.plugins:mail:3.0.0'
    implementation "com.drewnoakes:metadata-extractor:2.10.1"
    implementation 'org.codehaus.jackson:jackson-core-asl:1.9.13'
    implementation 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'

    implementation 'org.grails.plugins:quartz:2.0.13'
    implementation 'org.quartz-scheduler:quartz:2.2.1' // Need transitive dependency from plugin

    // For logback filter
    implementation 'org.codehaus.janino:janino:3.0.6'

    // Added due to previous reliance on transitive dependencies from plugins
    implementation 'au.com.bytecode:opencsv:2.4'
    implementation "com.bertramlabs.plugins:asset-pipeline-core:$assetPipelineVersion"
    implementation 'au.org.ala.plugins:openapi:0.1.0-SNAPSHOT'
    implementation "org.hibernate:hibernate-validator:6.2.0.Final"
    testImplementation "org.grails:grails-gorm-testing-support"
    testImplementation "org.grails.plugins:geb"
    testImplementation "org.grails:grails-web-testing-support"

    testImplementation "com.github.tomakehurst:wiremock-jre8-standalone:2.33.2"
    testImplementation "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-safari-driver:$seleniumSafariDriverVersion"
    testImplementation "org.seleniumhq.selenium:selenium-remote-driver:$seleniumVersion"
    testImplementation "org.seleniumhq.selenium:selenium-api:$seleniumVersion"
    testImplementation "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntimeOnly "net.sourceforge.htmlunit:htmlunit:2.18"

    testImplementation "com.squareup.retrofit2:retrofit-mock:2.4.0"

    runtimeOnly "org.slf4j:jul-to-slf4j:1.7.7"
    runtimeOnly "org.hsqldb:hsqldb:2.3.1"
}

springBoot {
    buildInfo()
}

bootRun {
    //dependsOn npm_run_bundle
    jvmArgs('-Dspring.output.ansi.enabled=always', '-Xmx8000m')
    sourceResources sourceSets.main
    System.properties.each { k,v->
        if(!systemProperties[k]) {
            systemProperties[k] = v
            println "$k = $v"
        }
    }
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}


tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m', '-Xss2048k']
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
}

tasks.withType(Test) {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat 'full'
        showStandardStreams true
    }
}

assets {
    minifyJs = true
    minifyCss = true
}

npm_run_bundle {
    dependsOn npmInstall
}


bootJar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    enabled = true
    classifier = 'exec'
    launchScript()
}

assetCompile {
    dependsOn npm_run_bundle
}

assemble {
    dependsOn bootJar
}

bootWar {
    enabled = false
}

publish {
    dependsOn assemble
}



