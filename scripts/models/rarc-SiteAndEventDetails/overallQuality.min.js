var Output_rarc_EventAndLocationDetails_canopyVegetationTableRow=function(e,t,a,r){var o=this;ecodata.forms.NestedModel.apply(o,[e,t,a,r]),a=_.extend(a,{parent:o}),o.parameter=ko.observable(),o.transectOne=ko.observable().extend({numericString:2}),o.transectTwo=ko.observable().extend({numericString:2}),o.transectThree=ko.observable().extend({numericString:2}),o.transectFour=ko.observable().extend({numericString:2}),o.vegetationWidthAverageScore=ko.observable(),o.loadData=function(e){o.parameter(ecodata.forms.orDefault(e.parameter,void 0)),o.transectOne(ecodata.forms.orDefault(e.transectOne,0)),o.transectTwo(ecodata.forms.orDefault(e.transectTwo,0)),o.transectThree(ecodata.forms.orDefault(e.transectThree,0)),o.transectFour(ecodata.forms.orDefault(e.transectFour,0)),o.vegetationWidthAverageScore(ecodata.forms.orDefault(e.vegetationWidthAverageScore,""))},o.loadData(e||{})},context=_.extend({},context,{parent:self,listName:"canopyVegetationTable"});self.data.canopyVegetationTable=ko.observableArray().extend({list:{metadata:self.dataModel,constructorFunction:Output_rarc_EventAndLocationDetails_canopyVegetationTableRow,context:context,userAddedRows:!1,config:config}}),self.data.canopyVegetationTable.loadDefaults=function(){self.data.canopyVegetationTable.addRow({channelWidth_T1:"",channelWidth_averageScore:"",channelWidth_T2:"",channelWidth_T3:"",channelWidth_T4:"",parameter:"Channel Width (CW)"}),self.data.canopyVegetationTable.addRow({vegetationWidth_T2:"",vegetationWidth_T1:"",vegetationWidth_T4:"",parameter:"Vegetation Width (VW)",vegetationWidth_T3:"",vegetationWidth_averageScore:""}),self.data.canopyVegetationTable.addRow({vegetationWidth_T2_score:"",vegetationWidth_T1_score:"",vegetationWidth_averageScoreTotal:"",vegetationWidth_T3_score:"",parameter:"Score",vegetationWidth_T4_score:""})},self.transients.tempCanopyVegetationTableScore=ko.observable(),self.transients.canopyVegetationTableScore=function(e,t){return e||t?(e=parseInt(e),t=parseInt(t),isNaN(e)||isNaN(t)?0:e<=10?t<5?0:t<10?1:t<20?2:t<40?3:4:(t/=e)<.5?0:t<1?1:t<2?2:t<4?3:4):""},self.transients.updateCanopyVegetationScore=function(){var e=ko.utils.arrayFirst(self.data.canopyVegetationTable(),function(e){return"Channel Width (CW)"==e.parameter()}),t=ko.utils.arrayFirst(self.data.canopyVegetationTable(),function(e){return"Vegetation Width (VW)"==e.parameter()});$.each(self.data.canopyVegetationTable(),function(a,r){if("Score"==r.parameter()){r.transectOne(self.transients.canopyVegetationTableScore(e.transectOne(),t.transectOne())),r.transectTwo(self.transients.canopyVegetationTableScore(e.transectTwo(),t.transectTwo())),r.transectThree(self.transients.canopyVegetationTableScore(e.transectThree(),t.transectThree())),r.transectFour(self.transients.canopyVegetationTableScore(e.transectFour(),t.transectFour()));var o=((+r.transectOne()+ +r.transectTwo()+ +r.transectThree()+ +r.transectFour())/4).toFixed(2);r.vegetationWidthAverageScore(o),self.transients.tempCanopyVegetationTableScore(o)}else r.vegetationWidthAverageScore(""),self.transients.tempCanopyVegetationTableScore(0)})},self.data.canopyVegetationTable.subscribe(function(e){self.transients.updateCanopyVegetationScore()}),self.transients.canopyVegetationTableDirtyItems=ko.computed(function(){self.transients.updateCanopyVegetationScore()},this);var Output_rarc_EventAndLocationDetails_vegetationCoverTableRow=function(e,t,a,r){var o=this;ecodata.forms.NestedModel.apply(o,[e,t,a,r]),a=_.extend(a,{parent:o}),o.vegetationCover_parameter=ko.observable(),o.vegetationCover_transectOne=ko.observable().extend({metadata:{metadata:o.dataModel.vegetationCover_transectOne,context:a,config:r}}),o.vegetationCover_transectTwo=ko.observable().extend({metadata:{metadata:o.dataModel.vegetationCover_transectTwo,context:a,config:r}}),o.vegetationCover_transectThree=ko.observable().extend({metadata:{metadata:o.dataModel.vegetationCover_transectThree,context:a,config:r}}),o.vegetationCover_transectFour=ko.observable().extend({metadata:{metadata:o.dataModel.vegetationCover_transectFour,context:a,config:r}}),o.vegetationCoverAverageScore=ko.observable().extend({numericString:2}),o.loadData=function(e){o.vegetationCover_parameter(ecodata.forms.orDefault(e.vegetationCover_parameter,void 0)),o.vegetationCover_transectOne(ecodata.forms.orDefault(e.vegetationCover_transectOne,void 0)),o.vegetationCover_transectTwo(ecodata.forms.orDefault(e.vegetationCover_transectTwo,void 0)),o.vegetationCover_transectThree(ecodata.forms.orDefault(e.vegetationCover_transectThree,void 0)),o.vegetationCover_transectFour(ecodata.forms.orDefault(e.vegetationCover_transectFour,void 0)),o.vegetationCoverAverageScore(ecodata.forms.orDefault(e.vegetationCoverAverageScore,void 0))},o.loadData(e||{}),o.transients={},o.transients.convertToInt=function(e){var t="";switch(e){case"None":t=0;break;case"1 - 5%":case"1 - 30%":t=1;break;case"6 - 30%":case"31 - 60%":t=2;break;case"> 30%":case"> 60%":t=3;break;case"0":t=0;break;case"1":t=1;break;case"2":t=2;break;case"3":t=3}return t},o.vegetationCover_transectOne.subscribe(function(e){"No. of structural layers"==e.vegetationCover_parameter()&&(blockUIWithMessage("<p class='text-center'>ERROR</p><p class='text-center'>This field is automatically calculated</p>"),setTimeout(function(){$.unblockUI()},2e3))}),o.vegetationCover_transectTwo.subscribe(function(e){"No. of structural layers"==e.vegetationCover_parameter()&&(blockUIWithMessage("<p class='text-center'>ERROR</p><p class='text-center'>This field is automatically calculated</p>"),setTimeout(function(){$.unblockUI()},2e3))}),o.vegetationCover_transectThree.subscribe(function(e){"No. of structural layers"==e.vegetationCover_parameter()&&(blockUIWithMessage("<p class='text-center'>ERROR</p><p class='text-center'>This field is automatically calculated</p>"),setTimeout(function(){$.unblockUI()},2e3))}),o.vegetationCover_transectFour.subscribe(function(e){"No. of structural layers"==e.vegetationCover_parameter()&&(blockUIWithMessage("<p class='text-center'>ERROR</p><p class='text-center'>This field is automatically calculated</p>"),setTimeout(function(){$.unblockUI()},2e3))}),o.transients.vegetationWidthAverageScore=ko.computed(function(){var e,t,a,r,n=0,s=0;(e=o.transients.convertToInt(o.vegetationCover_transectOne()))>=0&&(s+=e,n++),(t=o.transients.convertToInt(o.vegetationCover_transectTwo()))>=0&&(s+=t,n++),(a=o.transients.convertToInt(o.vegetationCover_transectThree()))>=0&&(s+=a,n++),(r=o.transients.convertToInt(o.vegetationCover_transectFour()))>=0&&(s+=r,n++);var i=s/n;return i=isNaN(i)?0:i,o.vegetationCoverAverageScore(i.toFixed(2)),i},this)};context=_.extend({},context,{parent:self,listName:"vegetationCoverTable"});self.data.vegetationCoverTable=ko.observableArray().extend({list:{metadata:self.dataModel,constructorFunction:Output_rarc_EventAndLocationDetails_vegetationCoverTableRow,context:context,userAddedRows:!1,config:config}}),self.data.vegetationCoverTable.loadDefaults=function(){self.data.vegetationCoverTable.addRow({vegetationCover_parameter:"Total canopy %",totalCanopy_T3:"",totalCanopy_T4:"",totalCanopy_T1:"",totalCanopy_T2:"",totalCanopy_averageScore:""}),self.data.vegetationCoverTable.addRow({vegetationCover_parameter:"Native canopy %",nativeCanopy_T4:"",nativeCanopy_T2:"",nativeCanopy_averageScore:"",nativeCanopy_T3:"",nativeCanopy_T1:""}),self.data.vegetationCoverTable.addRow({totalUnderstorey_T3:"",totalUnderstorey_T4:"",vegetationCover_parameter:"Total understorey %",totalUnderstorey_T1:"",totalUnderstorey_T2:"",totalUnderstorey_averageScore:""}),self.data.vegetationCoverTable.addRow({vegetationCover_parameter:"Native understorey %",nativeUnderstorey_T1:"",nativeUnderstorey_T4:"",nativeUnderstorey_T3:"",nativeUnderstorey_T2:"",nativeUnderstorey_averageScore:""}),self.data.vegetationCoverTable.addRow({vegetationCover_parameter:"Total ground cover %",totalGroundCover_T3_score:"",totalGroundCover_T2_score:"",totalGroundCover_T1_score:"",totalGroundCover_averageScoreTotal:"",noEdit:!0,totalGroundCover_T4_score:""}),self.data.vegetationCoverTable.addRow({nativeGroundCover_T1_score:"",nativeGroundCover_T4_score:"",vegetationCover_parameter:"Native ground cover %",nativeGroundCover_averageScoreTotal:"",noEdit:!0,nativeGroundCover_T3_score:"",nativeGroundCover_T2_score:""}),self.data.vegetationCoverTable.addRow({vegetationCover_parameter:"No. of structural layers",numberOfLayers_T1_score:"",numberOfLayers_T3_score:"",noEdit:!0,numberOfLayers_T4_score:"",numberOfLayers_averageScoreTotal:"",numberOfLayers_T2_score:""})},self.transients.layerRow=function(e){return ko.utils.arrayFirst(self.data.vegetationCoverTable(),function(t){return t.vegetationCover_parameter()==e})},self.transients.calculateLayers=function(e,t,a){var r=0,o=self.transients.layerRow(t),n=self.transients.layerRow(a),s=["1 - 30%","31 - 60%","> 60%","1 - 5%","6 - 30%","> 30%"];return 0==e&&o&&n&&(-1!=$.inArray(o.vegetationCover_transectOne(),s)||-1!=$.inArray(n.vegetationCover_transectOne(),s))?r=1:1==e&&o&&n&&(-1!=$.inArray(o.vegetationCover_transectTwo(),s)||-1!=$.inArray(n.vegetationCover_transectTwo(),s))?r=1:2==e&&o&&n&&(-1!=$.inArray(o.vegetationCover_transectThree(),s)||-1!=$.inArray(n.vegetationCover_transectThree(),s))?r=1:3==e&&o&&n&&(-1!=$.inArray(o.vegetationCover_transectFour(),s)||-1!=$.inArray(n.vegetationCover_transectFour(),s))&&(r=1),r},self.transients.updateVegetationCoverTableLayers=function(){for(var e=["Total canopy %","Native canopy %","Total understorey %","Native understorey %","Total ground cover %","Native ground cover %","No. of structural layers"],t=0;t<4;t++){var a=self.transients.calculateLayers(t,e[0],e[1])+self.transients.calculateLayers(t,e[2],e[3])+self.transients.calculateLayers(t,e[4],e[5]),r=0;$.each(self.data.vegetationCoverTable(),function(e,o){"No. of structural layers"==o.vegetationCover_parameter()&&(r+=a,0==t?o.vegetationCover_transectOne(a):1==t?o.vegetationCover_transectTwo(a):2==t?o.vegetationCover_transectThree(a):3==t?o.vegetationCover_transectFour(a):4==t&&o.vegetationCoverAverageScore(r))})}},self.data.vegetationCoverTable.subscribe(function(e){self.transients.updateVegetationCoverTableLayers()}),self.transients.vegetationCoverTableDirtyItems=ko.computed(function(){self.transients.updateVegetationCoverTableLayers()},this);var Output_rarc_EventAndLocationDetails_debrisTableRow=function(e,t,a,r){var o=this;ecodata.forms.NestedModel.apply(o,[e,t,a,r]),a=_.extend(a,{parent:o}),o.debris_parameter=ko.observable(),o.debris_transectOne=ko.observable().extend({metadata:{metadata:o.dataModel.debris_transectOne,context:a,config:r}}),o.debris_transectTwo=ko.observable().extend({metadata:{metadata:o.dataModel.debris_transectTwo,context:a,config:r}}),o.debris_transectThree=ko.observable().extend({metadata:{metadata:o.dataModel.debris_transectThree,context:a,config:r}}),o.debris_transectFour=ko.observable().extend({metadata:{metadata:o.dataModel.debris_transectFour,context:a,config:r}}),o.vegetationWidthAverageScore=ko.observable(),o.loadData=function(e){o.debris_parameter(ecodata.forms.orDefault(e.debris_parameter,void 0)),o.debris_transectOne(ecodata.forms.orDefault(e.debris_transectOne,void 0)),o.debris_transectTwo(ecodata.forms.orDefault(e.debris_transectTwo,void 0)),o.debris_transectThree(ecodata.forms.orDefault(e.debris_transectThree,void 0)),o.debris_transectFour(ecodata.forms.orDefault(e.debris_transectFour,void 0)),o.vegetationWidthAverageScore(ecodata.forms.orDefault(e.vegetationWidthAverageScore,0))},o.loadData(e||{});var n=["Total leaf litter","Native leaf litter","Standing dead trees","Hollow bearing trees (>20cm DBH)","Fallen logs (>10cm diameter)"];o.transients.convertToInt=function(e,t){var a="";if(e==n[0]||e==n[1])switch(t){case"None":a=0;break;case"1 - 30%":a=1;break;case"31 - 60%":a=2;break;case"> 60%":a=3}else if(e==n[2]||e==n[3])switch(t){case"Absent":a=0;break;case"Present":a=1}else if(e==n[4])switch(t){case"None":a=0;break;case"Small quantities":a=1;break;case"Abundant":a=2}return a},o.transients.vegetationWidthAverageScore=ko.computed(function(){var e,t,a,r,n=0,s=0;(e=o.transients.convertToInt(o.debris_parameter(),o.debris_transectOne()))&&(s+=e,n++),(t=o.transients.convertToInt(o.debris_parameter(),o.debris_transectTwo()))&&(s+=t,n++),(a=o.transients.convertToInt(o.debris_parameter(),o.debris_transectThree()))&&(s+=a,n++),(r=o.transients.convertToInt(o.debris_parameter(),o.debris_transectFour()))&&(s+=r,n++);var i=s/n;return i=isNaN(i)?0:i,o.vegetationWidthAverageScore(i.toFixed(2)),i},this)};context=_.extend({},context,{parent:self,listName:"debrisTable"});self.data.debrisTable=ko.observableArray().extend({list:{metadata:self.dataModel,constructorFunction:Output_rarc_EventAndLocationDetails_debrisTableRow,context:context,userAddedRows:!1,config:config}}),self.data.debrisTable.loadDefaults=function(){self.data.debrisTable.addRow({debris_parameter:"Total leaf litter",totalLeafLitter_T4:"",totalLeafLitter_T3:"",totalLeafLitter_T2:"",totalLeafLitter_T1:"",totalLeafLitter_averageScore:""}),self.data.debrisTable.addRow({debris_parameter:"Native leaf litter",nativeLeafLitter_T1:"",nativeLeafLitter_T3:"",nativeLeafLitter_T2:"",nativeLeafLitter_T4:"",nativeLeafLitter_averageScore:""}),self.data.debrisTable.addRow({deadTrees_averageScore:"",debris_parameter:"Standing dead trees",deadTrees_T3:"",deadTrees_T2:"",deadTrees_T4:"",deadTrees_T1:""}),self.data.debrisTable.addRow({debris_parameter:"Hollow bearing trees (>20cm DBH)",hollowBearingTrees_T1:"",hollowBearingTrees_averageScore:"",hollowBearingTrees_T2:"",hollowBearingTrees_T3:"",hollowBearingTrees_T4:""}),self.data.debrisTable.addRow({debris_parameter:"Fallen logs (>10cm diameter)",logs_averageScoreTotal:"",logs_T3_score:"",logs_T1_score:"",logs_T4_score:"",noEdit:!0,logs_T2_score:""})};var Output_rarc_EventAndLocationDetails_featuresTableRow=function(e,t,a,r){var o=this;ecodata.forms.NestedModel.apply(o,[e,t,a,r]),a=_.extend(a,{parent:o}),o.feature_parameter=ko.observable(),o.feature_transectOne=ko.observable().extend({metadata:{metadata:o.dataModel.feature_transectOne,context:a,config:r}}),o.feature_transectTwo=ko.observable().extend({metadata:{metadata:o.dataModel.feature_transectTwo,context:a,config:r}}),o.feature_transectThree=ko.observable().extend({metadata:{metadata:o.dataModel.feature_transectThree,context:a,config:r}}),o.feature_transectFour=ko.observable().extend({metadata:{metadata:o.dataModel.feature_transectFour,context:a,config:r}}),o.featuresAverageScore=ko.observable(),o.loadData=function(e){o.feature_parameter(ecodata.forms.orDefault(e.feature_parameter,void 0)),o.feature_transectOne(ecodata.forms.orDefault(e.feature_transectOne,void 0)),o.feature_transectTwo(ecodata.forms.orDefault(e.feature_transectTwo,void 0)),o.feature_transectThree(ecodata.forms.orDefault(e.feature_transectThree,void 0)),o.feature_transectFour(ecodata.forms.orDefault(e.feature_transectFour,void 0)),o.featuresAverageScore(ecodata.forms.orDefault(e.featuresAverageScore,void 0))},o.loadData(e||{}),o.transients.convertToInt=function(e,t){var a="";if("Reeds"==e||"Large native tussock grasses"==e)switch(t){case"None":a=0;break;case"Scattered":a=1;break;case"Abundant":a=2}else switch(t){case"None":a=0;break;case"Scattered":a=1;break;case"Abundant":a=2;break;case"Abundant with grazing damage":a=-.5}return a},o.transients.featuresAverageScore=ko.computed(function(){var e,t,a,r,n=0,s=0;(e=o.transients.convertToInt(o.feature_parameter(),o.feature_transectOne()))>=-.5&&(s+=e,n++),(t=o.transients.convertToInt(o.feature_parameter(),o.feature_transectTwo()))>=-.5&&(s+=t,n++),(a=o.transients.convertToInt(o.feature_parameter(),o.feature_transectThree()))>=-.5&&(s+=a,n++),(r=o.transients.convertToInt(o.feature_parameter(),o.feature_transectFour()))>=-.5&&(s+=r,n++);var i=s/n;return i=isNaN(i)?0:i,o.featuresAverageScore(i.toFixed(2)),i},this)};context=_.extend({},context,{parent:self,listName:"featuresTable"});self.data.featuresTable=ko.observableArray().extend({list:{metadata:self.dataModel,constructorFunction:Output_rarc_EventAndLocationDetails_featuresTableRow,context:context,userAddedRows:!1,config:config}}),self.data.featuresTable.loadDefaults=function(){self.data.featuresTable.addRow({nativeCanopyRegen_T3:"",nativeCanopyRegen_T4:"",nativeCanopyRegen_averageScore:"",feature_parameter:"Native canopy species regeneration",nativeCanopyRegen_T1:"",nativeCanopyRegen_T2:""}),self.data.featuresTable.addRow({nativeUnderstoreyRegen_averageScore:"",feature_parameter:"Native understorey regeneration",nativeUnderstoreyRegen_T1:"",nativeUnderstoreyRegen_T2:"",nativeUnderstoreyRegen_T3:"",nativeUnderstoreyRegen_T4:""}),self.data.featuresTable.addRow({tussockGrasses_averageScore:"",feature_parameter:"Large native tussock grasses",tussockGrasses_T4:"",tussockGrasses_T3:"",tussockGrasses_T2:"",tussockGrasses_T1:""}),self.data.featuresTable.addRow({reeds_T1:"",reeds_T4:"",feature_parameter:"Reeds",reeds_T3:"",reeds_T2:"",reeds_averageScore:""})},self.data.proximityScore=ko.observable(),self.data.continuityScore=ko.observable(),self.data.habitatScoreTotal=ko.observable(),self.data.coverScoreTotal=ko.observable(),self.data.nativesScoreTotal=ko.observable(),self.data.debrisScoreTotal=ko.observable(),self.data.featuresScoreTotal=ko.observable(),self.data.totalScoreAggregate=ko.observable(),self.data.overallQuality=ko.observable(),self.transients.proximityScore=ko.computed(function(){var e=0;switch(self.data.nearestNativeVegetationGreaterThan10ha()){case"200 m - 1 km":e=1;break;case"Contiguous":e=2;break;case"Contiguous with patch > 50 ha":e=3;break;default:e=0}return self.data.proximityScore(e),e},this),self.transients.continuityScore=ko.computed(function(){var e=self.data.proportionOfRiverBankWithVegetationGreaterThan5mDeep(),t=.5*self.data.numberOfDiscontinuitiesGreaterThan50m(),a=0;switch(e){case"50 - 64%":a=t>=1?0:(1-t).toFixed(2);break;case"65 - 79%":a=t>=2?0:(2-t).toFixed(2);break;case"80 - 94%":a=t>=3?0:(3-t).toFixed(2);break;case"> 95%":a=t>=4?0:(4-t).toFixed(2);break;default:a=0}return self.data.continuityScore(a),a},this),self.transients.habitatScoreTotal=ko.computed(function(){var e=self.data.continuityScore()?self.data.continuityScore():0,t=self.transients.tempCanopyVegetationTableScore()?self.transients.tempCanopyVegetationTableScore():0,a=self.data.proximityScore()?self.data.proximityScore():0,r=Number(e)+Number(t)+Number(a);self.data.habitatScoreTotal(r)}),self.transients.featuresScoreTotal=ko.computed(function(){var e=0;$.each(self.data.featuresTable(),function(t,a){e+=Number(a.featuresAverageScore())}),self.data.featuresScoreTotal(e)}),self.transients.debrisScoreTotal=ko.computed(function(){var e=0;$.each(self.data.debrisTable(),function(t,a){e+=Number(a.vegetationWidthAverageScore())}),self.data.debrisScoreTotal(e)}),self.transients.coverScoreTotal=ko.computed(function(){var e=0,t=0;$.each(self.data.vegetationCoverTable(),function(a,r){var o=r.vegetationCover_parameter();"Total canopy %"==o||"Total understorey %"==o||"Total ground cover %"==o||"No. of structural layers"==o?e+=Number(r.vegetationCoverAverageScore()):"Native canopy %"!=o&&"Native understorey %"!=o&&"Native ground cover %"!=o||(t+=Number(r.vegetationCoverAverageScore()))}),self.data.coverScoreTotal(e),self.data.nativesScoreTotal(t)}),self.transients.totalScoreAggregate=ko.computed(function(){var e;e=(Number(self.data.debrisScoreTotal())?Number(self.data.debrisScoreTotal()):0)+(Number(self.data.featuresScoreTotal())?Number(self.data.featuresScoreTotal()):0)+(Number(self.data.habitatScoreTotal())?Number(self.data.habitatScoreTotal()):0)+(Number(self.data.coverScoreTotal())?Number(self.data.coverScoreTotal()):0)+(Number(self.data.nativesScoreTotal())?Number(self.data.nativesScoreTotal()):0),self.data.totalScoreAggregate(e),self.transients.updateVegetationCoverTableLayers()}),self.transients.overallQuality=ko.computed(function(){var e=self.data.totalScoreAggregate(),t="";e<=10&&(t="Degraded"),e<=20&&(t="Poor"),e<=30&&(t="Fair"),t=e<=40?"Good":"Excellent",self.data.overallQuality(t)});