var imageCarousel='<img style="height:300px" src="https://biocollect.ala.org.au/download/getScriptFile?hub=coralWatch&filename=plate.png&model=coralWatch" alt="Plate"><img style="height:300px" src="https://biocollect.ala.org.au/download/getScriptFile?hub=coralWatch&model=coralWatch&filename=boulder_layout.png" alt="Boulder"><img style="height:300px" src="https://biocollect.ala.org.au/download/getScriptFile?hub=coralWatch&model=coralWatch&filename=branching.png" alt="Branching"><img style="height:300px" src="https://biocollect.ala.org.au/download/getScriptFile?hub=coralWatch&model=coralWatch&filename=soft.png" alt="Boulder">';$(".form-actions").before(imageCarousel);const coralWatchContainerValueIncrement=function(e,t){if(!e||!t)return;e.has(t)||e.set(t,0);const a=e.get(t)+1;e.set(t,a)},coralWatchContainerToChartDataItems=function(e,t){if(console.warn("[CoralWatch] coralWatchContainerToChartDataItems start",e(),t),!e)return;t||(t=new Map);const a="CustomChartDataItem",o=[];t.forEach(function(t,r){const s=a+"|||"+r.toString()+"|||"+t.toString();if(o.push(s),-1===e.indexOf(s)){const t=a+"|||"+r.toString()+"|||",o=e().findIndex(function(e){return e.startsWith(t)});o>-1?e.splice(o,1,s):e.push(s)}}),e.remove(function(e){return-1===o.indexOf(e)}),console.warn("[CoralWatch] coralWatchContainerToChartDataItems finish",e())},coralWatchRecordLevelCountUpdate=function(e){const t=new Map,a=new Map;e.forEach(function(e){const o=e.colourCodeAverage();coralWatchContainerValueIncrement(t,o);const r=e.typeOfCoral();coralWatchContainerValueIncrement(a,r)}),coralWatchContainerToChartDataItems(self.data.colourCodeAverageRecordLevelCount,t),coralWatchContainerToChartDataItems(self.data.typeOfCoralRecordLevelCount,a)},coralWatchActivitySelfData=self.data;var observationCounter=0,Output_CoralWatch_coralObservationsRow=function(e,t,a,o){var r=this;ecodata.forms.NestedModel.apply(r,[e,t,a,o]),a=_.extend(a,{parent:r}),r.sampleId=ko.observable().extend({numericString:2}),r.colourCodeLightest=ko.observable().extend({metadata:{metadata:r.dataModel.colourCodeLightest,context:r.$context,config:o}}),r.colourCodeDarkest=ko.observable().extend({metadata:{metadata:r.dataModel.colourCodeDarkest,context:r.$context,config:o}}),r.colourCodeAverage=ko.observable().extend({numericString:2}),r.typeOfCoral=ko.observable().extend({metadata:{metadata:r.dataModel.typeOfCoral,context:r.$context,config:o}});var s=_.extend(o,{printable:"",dataFieldName:"coralSpecies",output:"CoralWatch",surveyName:""});r.coralSpecies=new SpeciesViewModel({},s),r.speciesPhoto=ko.observableArray([]),r.speciesPhoto=ko.observableArray([]),r.loadspeciesPhoto=function(e){void 0!==e&&$.each(e,function(e,t){r.speciesPhoto.push(new ImageViewModel(t,!1,a))})},r.loadData=function(e){r.sampleId(ecodata.forms.orDefault(e.sampleId,++observationCounter)),r.colourCodeLightest(ecodata.forms.orDefault(e.colourCodeLightest,void 0)),r.colourCodeDarkest(ecodata.forms.orDefault(e.colourCodeDarkest,void 0)),r.colourCodeAverage(ecodata.forms.orDefault(e.colourCodeAverage,0)),r.typeOfCoral(ecodata.forms.orDefault(e.typeOfCoral,void 0)),r.coralSpecies.loadData(ecodata.forms.orDefault(e.coralSpecies,{})),r.loadspeciesPhoto(ecodata.forms.orDefault(e.speciesPhoto,[]))},r.loadData(e||{}),r.colourCodeLightest.subscribe(function(e){var t=r.colourCodeLightest();if(t){var a=["B1","B2","B3","B4","B5","B6","C1","C2","C3","C4","C5","C6","D1","D2","D3","D4","D5","D6","E1","E2","E3","E4","E5","E6"],o=(a.indexOf(t),[]);$.each(a,function(e,a){var r=t.charAt(1);parseInt(a.charAt(1))>=r&&o.push({text:a,value:a})}),bootbox.prompt({title:"<h1>Select Dark colour code value<h1>",inputType:"select",inputOptions:o,buttons:{confirm:{label:"OK",className:"btn-success"},cancel:{label:"Clear",className:"btn-danger"}},callback:function(e){if(r.colourCodeDarkest(e),r.colourCodeDarkest()&&r.colourCodeLightest()){var t=parseInt(r.colourCodeDarkest().charAt(1))+parseInt(r.colourCodeLightest().charAt(1));t>0&&r.colourCodeAverage((t/2).toFixed(2))}}})}}),r.typeOfCoral.subscribe(function(e){if(e){var t="";switch(e){case"Plate corals":t="https://biocollect.ala.org.au/download/getScriptFile?hub=coralWatch&model=coralWatch&filename=plate.png";break;case"Boulder corals":t="https://biocollect.ala.org.au/download/getScriptFile?hub=coralWatch&model=coralWatch&filename=boulder_layout.png";break;case"Branching corals":t="https://biocollect.ala.org.au/download/getScriptFile?hub=coralWatch&model=coralWatch&filename=branching.png";break;case"Soft corals":t="https://biocollect.ala.org.au/download/getScriptFile?hub=coralWatch&model=coralWatch&filename=soft.png";break;default:t=""}t&&"<img src='"+t+"'></img>"}}),r.colourCodeAverage.subscribe(function(e){const t=coralWatchActivitySelfData.coralObservations();coralWatchRecordLevelCountUpdate(t)}),r.typeOfCoral.subscribe(function(e){const t=coralWatchActivitySelfData.coralObservations();coralWatchRecordLevelCountUpdate(t)})},context=_.extend({},context,{parent:self,listName:"coralObservations"});self.data.coralObservations=ko.observableArray().extend({list:{metadata:self.dataModel,constructorFunction:Output_CoralWatch_coralObservationsRow,context:context,userAddedRows:!0,config:config}}),self.data.coralObservations.subscribe(function(e){coralWatchRecordLevelCountUpdate(self.data.coralObservations())}),self.data.coralObservations.loadDefaults=function(){self.data.coralObservations.addRow()},self.data.depthInMetres.subscribe(function(e){var t=3.28084*parseFloat(self.data.depthInMetres());t=t.toFixed(2),self.data.depthInFeet(t)}),self.data.waterTemperatureInDegreesCelcius.subscribe(function(e){var t=parseFloat(1.8*parseFloat(self.data.waterTemperatureInDegreesCelcius()).toFixed(2)+32);t=t.toFixed(2),self.data.waterTemperatureInDegreesFarenheit(t)}),self.transients.convert=ko.computed(function(){if("0"==self.data.waterTemperatureInDegreesFarenheit()&&"0"==self.data.waterTemperatureInDegreesCelcius());else{var e=(parseFloat(self.data.waterTemperatureInDegreesFarenheit()).toFixed(2)-32)*(5/19);e=e.toFixed(2),self.data.waterTemperatureInDegreesCelcius(e)}var t=parseFloat(self.data.depthInFeet()).toFixed(2)/3.28084;t=t.toFixed(2),self.data.depthInMetres(t)},this);