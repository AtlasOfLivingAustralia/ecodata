apply plugin:"maven-publish"
publishing {
    repositories {
        maven {
            name 'Nexus'
            url "https://nexus.ala.org.au/content/repositories/${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'}"
            credentials {
                username = System.getenv('TRAVIS_DEPLOY_USERNAME')
                password = System.getenv('TRAVIS_DEPLOY_PASSWORD')
            }
        }
    }
    publications {
        mavenJar(MavenPublication) {
            pom.withXml {
                def pomNode = asNode()
                pomNode.dependencyManagement.replaceNode {}

                // simply remove dependencies without a version
                // version-less dependencies are handled with dependencyManagement
                // see https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/8 for more complete solutions
                pomNode.dependencies.dependency.findAll {
                    it.version.text().isEmpty()
                }.each {
                    it.replaceNode {}
                }
            }
            if ("${grailsVersion}".startsWith("3")) {
                from components.web
                if (bootRepackage && bootRepackage.enabled && bootRepackage.classifier) {
                    def repackagedFile = file("$libsDir/$project.name-$project.version-${bootRepackage.classifier}.jar")
                    if (repackagedFile.exists()) {
                        artifact(repackagedFile) {
                            classifier bootRepackage.classifier
                        }
                    } else {
                        logger.quiet("Spring Boot repackage with classifier specified but file is not present!")
                    }
                }
            }
            else if ("${grailsVersion}".startsWith("4")) {
                from components.web
                if (bootJar && bootJar.enabled && bootJar.classifier) {
                    def repackagedFile = file("$libsDir/$project.name-$project.version-${bootJar.classifier}.jar")
                    if (repackagedFile.exists()) {
                        artifact(repackagedFile) {
                            classifier bootJar.classifier
                        }
                    } else {
                        logger.quiet("Spring Boot repackage with classifier specified but file is not present!")
                    }
                }
            }

        }
    }
}